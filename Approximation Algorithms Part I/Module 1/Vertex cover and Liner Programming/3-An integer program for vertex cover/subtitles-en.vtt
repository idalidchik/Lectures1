WEBVTT

1
00:00:00.000 --> 00:00:04.165
[MUSIC]

2
00:00:04.165 --> 00:00:08.391
I have given you the definition
of the vertex cover problem.

3
00:00:08.391 --> 00:00:10.057
I showed you the input.

4
00:00:10.057 --> 00:00:11.890
I showed you the output.

5
00:00:11.890 --> 00:00:12.800
That defines the problem.

6
00:00:14.280 --> 00:00:18.630
Now, we are going to see in more depth
the mathematical formulation for

7
00:00:18.630 --> 00:00:20.270
the problem as an integer program.

8
00:00:22.870 --> 00:00:30.635
An integer program has three parts to it,
variables, constraints, and an objective.

9
00:00:30.635 --> 00:00:37.530
Let us start with the variables for
mothering the vertex cover.

10
00:00:37.530 --> 00:00:41.790
A vertex cover is a subset for
all the vertices in the graph.

11
00:00:42.990 --> 00:00:44.490
How do we model?

12
00:00:44.490 --> 00:00:46.900
How do we represent a vertex cover?

13
00:00:48.210 --> 00:00:52.200
Well how do we represent the subset
of vertices of the graph?

14
00:00:53.600 --> 00:00:57.570
For each vertex of the graph,
we need to know whether or

15
00:00:57.570 --> 00:01:00.980
not the vertex is in the subset.

16
00:01:00.980 --> 00:01:01.919
Two possibilities.

17
00:01:03.110 --> 00:01:09.010
So, let us define one variable for
each vertex of the graph.

18
00:01:10.080 --> 00:01:14.173
Vertex a gives us variable x sub a.

19
00:01:14.173 --> 00:01:18.182
That takes on two possible values, 0 or 1,

20
00:01:18.182 --> 00:01:23.170
depending on whether
vertex a is in the subset.

21
00:01:23.170 --> 00:01:28.260
Xa equals 1 means vertex
Xa is in the cover.

22
00:01:28.260 --> 00:01:33.170
Xa equals 0 means vertex
Xa is not in the cover.

23
00:01:34.300 --> 00:01:37.670
We do this for every vertex in the graph.

24
00:01:39.170 --> 00:01:43.322
N vertices, this gives us n variables,

25
00:01:43.322 --> 00:01:47.750
two possibilities for each variable.

26
00:01:47.750 --> 00:01:53.720
This gives us 2 to the n possible
assignments of our variables.

27
00:01:53.720 --> 00:01:55.435
So that's our variable set.

28
00:01:56.940 --> 00:02:01.180
Next, the constraints.

29
00:02:01.180 --> 00:02:04.320
A vertex cover must cover
every edge in the graph.

30
00:02:04.320 --> 00:02:08.870
How do we capture that mathematically
with an algebraic expression?

31
00:02:10.030 --> 00:02:13.480
Let us consider one of these edges,
say edge ab.

32
00:02:15.220 --> 00:02:18.090
We have two variables, Xa, Xb.

33
00:02:19.250 --> 00:02:24.410
Each of them takes on two possible values,
so we have four possibilities.

34
00:02:24.410 --> 00:02:31.327
Four possibilities, 0 0, 1 0, 01, 1 1.

35
00:02:31.327 --> 00:02:36.223
In the first case 0 0, neither a nor
b are in the cover and

36
00:02:36.223 --> 00:02:39.540
so the edge is not covered.

37
00:02:39.540 --> 00:02:42.550
In the other three cases,
the edge is covered.

38
00:02:43.850 --> 00:02:46.620
Now what we need is an idea.

39
00:02:47.820 --> 00:02:55.050
The idea is let us compute
the sum x sub a plus x sub b.

40
00:02:55.050 --> 00:02:59.050
And observe in these four
possibilities what do we have?

41
00:02:59.050 --> 00:03:02.223
0 plus 0 equals 0.

42
00:03:02.223 --> 00:03:06.925
In French we say [FOREIGN],

43
00:03:06.925 --> 00:03:09.923
1 + 0, is 1.

44
00:03:09.923 --> 00:03:11.894
0 + 1 is 1.

45
00:03:11.894 --> 00:03:13.763
1 + 1 is 2.

46
00:03:13.763 --> 00:03:18.782
So the four possibilities for
the sum are 0, 1, 1, 2.

47
00:03:18.782 --> 00:03:25.760
And we want to express the fact that
the bottom three are a cover of the edge.

48
00:03:25.760 --> 00:03:27.950
The first one is not valid.

49
00:03:27.950 --> 00:03:33.710
Very simple, x sub a plus x sub
b is greater than or equal to 1.

50
00:03:33.710 --> 00:03:38.990
This expresses the fact that our
vertices cover the edge a, b.

51
00:03:42.340 --> 00:03:47.710
Going from one edge to an entire graph,
we write one constraint for

52
00:03:47.710 --> 00:03:51.800
each graph edge and so
we have the whole set

53
00:03:53.070 --> 00:03:57.560
of constraints of linear
inequalities that together

54
00:03:57.560 --> 00:04:02.810
express the fact that the subset
of the vertices is a vertex cover.

55
00:04:04.000 --> 00:04:08.820
Finally, we want the vertex
cover that has minimum weight.

56
00:04:08.820 --> 00:04:10.360
How do we write this?

57
00:04:10.360 --> 00:04:12.700
We write this using an objective.

58
00:04:12.700 --> 00:04:18.880
The objective is to minimize
X sub a times one because

59
00:04:18.880 --> 00:04:23.938
if A isn't a cover, since A has weight 1,
it contributes 1 to the cost.

60
00:04:23.938 --> 00:04:30.600
Plus, x sub times 4, if b is in the cover,
it contributes 4 to the cost.

61
00:04:30.600 --> 00:04:36.436
Plus 4xc+2xd+9xe+4xf+3xg.

62
00:04:36.436 --> 00:04:37.188
That's it.

63
00:04:37.188 --> 00:04:38.060
That's our objective.

64
00:04:41.050 --> 00:04:43.530
What is the relation to recap?

65
00:04:43.530 --> 00:04:47.330
If you look at the green vertices A,
C, D, F,

66
00:04:47.330 --> 00:04:52.630
G, observing the graph you can
see that every edge is covered.

67
00:04:52.630 --> 00:04:54.920
It's a vertex cover.

68
00:04:54.920 --> 00:04:57.569
Summing their weights,
you can see that the value is 14.

69
00:04:58.910 --> 00:05:04.650
Corresponding to that,
there's an assignment on the variables xa,

70
00:05:04.650 --> 00:05:11.183
xc, xd, xf, xg, are all equal to 1, and
the other variables are equal to 0.

71
00:05:11.183 --> 00:05:16.414
You can verify that all
the inequalities are satisfied

72
00:05:16.414 --> 00:05:23.700
because all edges are covered, and
that the value of the objective is 14.

73
00:05:23.700 --> 00:05:31.490
In general, for a general graph,
you have one variable per vertex.

74
00:05:31.490 --> 00:05:36.600
You have the constraint that for every
vertex in your graph, every vertex u,

75
00:05:36.600 --> 00:05:41.170
variable Xu must be equal to 0 or
equal to 1.

76
00:05:41.170 --> 00:05:45.940
And for every edge of the graph, you have
the constraint that if the edge is UV,

77
00:05:45.940 --> 00:05:49.565
Xu plus XV has to be
greater than the record 1.

78
00:05:50.618 --> 00:05:55.330
Given these constraints, your objective
is to minimize the sum over every

79
00:05:55.330 --> 00:05:59.250
vertex u in the graph
of w sub u times x u.

80
00:06:00.270 --> 00:06:03.890
This is an integer program for
vertex cover.

81
00:06:05.610 --> 00:06:10.560
There's a one to one correspondence
between vertex covers and

82
00:06:10.560 --> 00:06:14.920
assignments of the variables that
satisfy all the constraints.

83
00:06:14.920 --> 00:06:19.780
And the value of the vortex
cover is the objective value

84
00:06:19.780 --> 00:06:21.190
of the corresponding assignment.

85
00:06:22.980 --> 00:06:28.720
Thus I have given you an integer
program that is a formulation for

86
00:06:28.720 --> 00:06:30.760
the vertex cover problem.

87
00:06:30.760 --> 00:06:35.260
Now we are going to see a linear
program in relaxation for vertex cover.