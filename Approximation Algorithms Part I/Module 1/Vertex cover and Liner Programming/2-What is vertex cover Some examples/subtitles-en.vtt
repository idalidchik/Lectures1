WEBVTT

1
00:00:00.000 --> 00:00:04.128
[MUSIC]

2
00:00:04.128 --> 00:00:08.270
So far, we have discussed
approximation algorithms in general.

3
00:00:09.430 --> 00:00:13.530
Now, we are going to study a specific
problem, the vertex cover problem.

4
00:00:14.620 --> 00:00:18.330
First, I need to give you the definition
of the vertex cover problem.

5
00:00:20.910 --> 00:00:23.520
Here is a vertex cover.

6
00:00:24.980 --> 00:00:26.000
Look at this blanket.

7
00:00:27.500 --> 00:00:33.120
The vertices on that blanket
touch all the edges of the graph

8
00:00:33.120 --> 00:00:36.959
that appears at the bottom of this screen.

9
00:00:38.110 --> 00:00:42.850
So the vertices under the blanket, three
of them are a vertex cover for that graph.

10
00:00:44.320 --> 00:00:48.712
And by the way, the character represented
her is Linus, a Charlie Brown character.

11
00:00:51.301 --> 00:00:53.920
I like to give definitions from examples.

12
00:00:53.920 --> 00:00:59.020
So let us start with a famous example
of a graph that is often used

13
00:00:59.020 --> 00:01:04.450
to prove counter examples to show that
certain conjunctions do not hold.

14
00:01:06.530 --> 00:01:10.180
On this graph,
how would you construct a vertex cover?

15
00:01:10.180 --> 00:01:12.670
We have to pick a certain set of vertices.

16
00:01:12.670 --> 00:01:14.980
Let me start.

17
00:01:14.980 --> 00:01:20.612
Let's say,
I will take the top vertex, vertex

18
00:01:20.612 --> 00:01:25.650
A A covers three edges of the graph,
I drew them in red.

19
00:01:27.000 --> 00:01:31.800
Three edges, so far so good, but
there are still edges uncovered,

20
00:01:31.800 --> 00:01:35.040
not yet covered on this graph so
I have to keep going.

21
00:01:35.040 --> 00:01:38.530
So we'll pick another
vertex on this graph.

22
00:01:38.530 --> 00:01:43.730
For example, I can pick a vertex
at the bottom left of my figure.

23
00:01:45.650 --> 00:01:51.490
B covers three edges.

24
00:01:51.490 --> 00:01:52.810
Good.

25
00:01:52.810 --> 00:01:54.310
Now, I need to continue.

26
00:01:54.310 --> 00:01:57.320
Pick more vertices to cover all the edges.

27
00:01:57.320 --> 00:01:59.270
Another one C.

28
00:02:00.710 --> 00:02:06.810
C covers three edges, but one of
them is already covered by vertex B.

29
00:02:06.810 --> 00:02:07.790
No matter.

30
00:02:07.790 --> 00:02:11.930
It does not matter that an edge
is covered by both end points.

31
00:02:11.930 --> 00:02:13.990
C covers two more edges.

32
00:02:13.990 --> 00:02:17.774
I keep going, let me pick vertex D,

33
00:02:17.774 --> 00:02:24.650
then Vertex E, F and voila.

34
00:02:24.650 --> 00:02:29.570
This, my set of six vertices,
A, B, C, D, E,

35
00:02:29.570 --> 00:02:33.550
F that is a vertex cover of the graph.

36
00:02:33.550 --> 00:02:38.980
Every edge in this graph is covered
by at least one of these vertices.

37
00:02:38.980 --> 00:02:41.430
Edge B-C is covered twice.

38
00:02:42.630 --> 00:02:46.740
But all in all, every edge has at
least one end point in the cover.

39
00:02:48.010 --> 00:02:50.920
So that's the vertex cover of size 6.

40
00:02:50.920 --> 00:02:55.670
If every vertex has weight 1,
then the weight of my cover

41
00:02:55.670 --> 00:03:00.148
is 1 plus 1 plus 1 plus 1 plus 1 plus 1,
6.

42
00:03:01.320 --> 00:03:05.130
This is optimal,
it is not possible to cover

43
00:03:05.130 --> 00:03:10.120
all the edges of this
graph with five vertices.

44
00:03:10.120 --> 00:03:10.628
Why is that?

45
00:03:10.628 --> 00:03:16.980
It's easy, easy to find an argument
to prove that five is possible.

46
00:03:18.410 --> 00:03:22.280
Indeed observe the outer
part of the graph.

47
00:03:22.280 --> 00:03:24.660
It's a cycle of length five.

48
00:03:26.050 --> 00:03:30.300
Well, if you want to cover all
the edges of a five cycle,

49
00:03:30.300 --> 00:03:32.370
you need at least three vertices.

50
00:03:34.090 --> 00:03:37.060
Now observe the inner part of the graph.

51
00:03:37.060 --> 00:03:37.560
It's a star.

52
00:03:39.390 --> 00:03:41.310
A star with five points.

53
00:03:41.310 --> 00:03:46.900
Well, the star is just another
way to draw a five cycle.

54
00:03:46.900 --> 00:03:50.020
So we also need three vertices

55
00:03:50.020 --> 00:03:53.430
inside the graph to cover
the inner cycle of the graph.

56
00:03:54.440 --> 00:03:57.670
All in all, we need at least six vertices.

57
00:03:57.670 --> 00:04:02.350
So the solution I give you
a,b,c,d,e,f is optimal.

58
00:04:02.350 --> 00:04:06.740
It minimizes the weight of
the vertices that are chosen.

59
00:04:08.740 --> 00:04:13.500
So, that's the vertex column
problem given as an input,

60
00:04:13.500 --> 00:04:17.110
a graph where every vertex
in the graph has a weight.

61
00:04:18.230 --> 00:04:24.410
We have constructed as an output,
a subset of the graph that this is,

62
00:04:24.410 --> 00:04:30.400
that covers every single edge of the graph
and whose total weight is minimum.

63
00:04:30.400 --> 00:04:33.200
The sum of the vertex weights is minimum.

64
00:04:33.200 --> 00:04:37.820
This is one of the most fundamental
problems of common internal optimization.

65
00:04:40.340 --> 00:04:44.570
So, I have given you a definition
of the vertex cover programming.

66
00:04:45.810 --> 00:04:51.487
Now, I will give you another formulation,
more algebraic as an integer program.

67
00:04:51.487 --> 00:04:52.383
[SOUND]